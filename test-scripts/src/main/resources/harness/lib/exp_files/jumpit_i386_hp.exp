set force_conservative 1
set timeout -1 
set core [lindex $argv 4]
set gran [lindex $argv 5]
set wran [lindex $argv 6]
set option [lindex $argv 7]
set cifip [lindex $argv 2]
set server [lindex $argv 1]
set ilom [lindex $argv 8]
set prompt "^.*-> $"
set prompt_dm "> $"
set state 0
set timeout 5400
proc exit1 {} {
exit 1
}
spawn telnet atrcx1089.athtem.eei.ericsson.se 
expect "login:"
send "root\r"
expect "assword:"
send "dmbld23\r"
expect "#"
send "bash\r"
expect "#"
send "/usr/bin/ssh Administrator@$ilom set /system1/bootconfig1/bootsource5 bootorder=1\r"
expect -timeout 10 "Are you sure you want to continue connecting (yes/no)" {send "yes\r"; exp_continue}
expect "password: "
send "shroot12\r"
expect -re $prompt 
send_user "Initiating Network Connection...\n"
expect "#" 
send_user "Connection to HP BLADE ILO...\n"
send "ssh Administrator@$ilom\r"
expect "password: "
send "shroot12\r"
expect -re $prompt 
send "reset /system1\r"
expect -re $prompt
exec sleep 300
send "set /system1/bootconfig1/bootsource3 bootorder=1\r"
expect -re $prompt
send "stop /system1/oemhp_vsp1\r"
expect -re $prompt
send "vsp\r"
set timeout 2800
send_user "Connected..\1"
expect -timeout 10 "Enter disks for first Plex of ossdg" {send "\r"; exp_continue}
expect_after timeout exit1
set timeout 21600
while 1 {
expect {
 "Total number of GSM Cells"  {send "100\r"}
 "Total number of UTRAN Cells"  {send "100\r"}
 "Total number of RNCs" {send "2\r"}	
 "Total number of LTE Cells"  {send "0\r"}
 "Total number of Core Nodes" {send "2\r"}
 "How many AXD based nodes are to be supported (0-75)" {send "0\r"}
 "Will the TGR application be used" {send "YES\r"}
 "How many TeS nodes" {send "0\r"}
 "Will the one minute GPEH application be used" {send "YES\r"} 
 "Allocate space for SGW" {send "YES\r"}
 "Allocate space for PMS" {send "YES\r"}
 "Allocate space for EBSW" {send "YES\r"}
 "Allocate space for RPMO"  {send "YES\r"}
 "Allocate space for EBS-G"  {send "YES\r"}
 "Allocate space for RTT"  {send "YES\r"}
 "Setup RNO Database Export Interface"  {send "YES\r"}
 "Allocate space for EBS-S" {send "YES\r"}
 "Please enter the number of sites that the OSS-RC installation will support" {send "0\r"}
 "Please enter the combined number of cells on all OSS-RC servers that will be audited by IRATHOM application" {send "0\r"}
 "Please enter the number of STN nodes that the OSS-RC installation will support" {send "0\r"}
 "Please enter the number of MGW nodes that the OSS-RC installation will support" {send "0\r"}
 "Please enter the number of SGSN nodes that the OSS-RC installation will support" {send "0\r"}
 "Please enter the number of SGSN MME nodes that the OSS-RC installation will support" {send "0\r"}
 "Please enter the number of GGSN nodes per OSS-RC" {send "0\r"}
 "Please enter the number of 2G/3G SAUs per OSS-RC" {send "0\r"}
 "Please enter the number of 4G SAUs per OSS-RC" {send "0\r"}
 "Please enter the number of APG43 nodes that the OSS-RC installation will support" {send "0\r"}
 "Please enter the number of Redback SmartEdge nodes that the OSS-RC installation will support" {send "0\r"}
 "Please enter the number of SASN based nodes with SARA functionality that the OSS-RC installation will support" {send "0\r"}
 " \\\[ii]" {send "ii\r"}
 "The hostname of the OSS server" {send "\r"}
 "Enter the Netgroup name" {send "\r"}
 "The default password for the OSS-RC sybase users" {send "sybase11\r"}
 "The timezone for your geographical region" {send "GB-Eire\r"} "defaultrouter IP address" {send "\r"}
 "DNS-server's ip-address" {send "159.107.173.3\r"}
 "DNS-domain" {send "athtem.eei.ericsson.se\r"}
 "LDAP-domain" {send "athtem.eei.ericsson.se\r"}
 "SLS server name" {send "\r"}
 "Sentinel license file path " {send "\r"}
 "Type of xml file installation" {send "\r"}
 "The Veritas VM license key" {send "[lindex $argv 2]\r"}
 "This is either GSM1900 " {send "\r"}
 "Name of the network root" {send "ONRM_ROOT_MO\r"}
 "The X29 suffix to be used" {send "\r"}
 "The IP address of the WEBI server" {send "\r"}
 "The IP address of the first Windows Application Server" {send "\r"}
 "Are these values ok" {send "y\r"}
 "Successfully executed core" {break}
 timeout	{exit 1}
 }
}
exec sleep 600
send "exit\r"
