#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to cleanup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

	# Coded to fail in case TC_AUTOMATED=1 before automation completed
	# Change return code as required
    source "../../lib/admin_common_test.lib"
    CU_CP_STATUS_FILE=/ericsson/config/.cu_cp_status
	CU_CP_STATUS_TMP_FILE=/ericsson/config/.tmp_cu_cp_status
    
    if [ -f $CU_CP_STATUS_FILE ]
    then  
        mv $CU_CP_STATUS_FILE $CU_CP_STATUS_TMP_FILE
    fi
    
    make_cu_cp_status_file 0 
	return 0

}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {

	# Coded to fail in case TC_AUTOMATED=1 before automation completed
	# Change return code as required
    source /opt/ericsson/sck/lib/orc_common_functions.lib
    CU_CP_STATUS_FILE=/ericsson/config/.cu_cp_status
    
    if [ -f $CU_CP_STATUS_FILE ]
    then 
       orc_log_script "${CU_CP_STATUS_FILE} file created successfully"
       return 0
    else
        orc_log_script "ERROR: ${CU_CP_STATUS_FILE} file doesn't exist"
    fi

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {
    
    DEBUG="TRUE"
    source "/opt/ericsson/sck/lib/admin_common_functions.lib"
    CU_CP_STATUS_FILE=/ericsson/config/.cu_cp_status
    
    admin_get_log_dir 
    res=$?

    if [ $res -eq 1 ] 
    then
        orc_log_script "Negative test of admin_get_log_dir with pre-existing empty ${CU_CP_STATUS_FILE} file was successful"
    else
        orc_log_script "ERROR: Test of admin_get_log_dir file with pre-existing empty ${CU_CP_STATUS_FILE} file failed"
        return 1
    fi
    
    return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {


	# Coded to fail in case TC_AUTOMATED=1 before automation complete.
	# Change return code as required

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {

	# Coded to fail in case TC_AUTOMATED=1 before automation complete
	# Change return code as required
    CU_CP_STATUS_FILE=/ericsson/config/.cu_cp_status
	CU_CP_STATUS_TMP_FILE=/ericsson/config/.tmp_cu_cp_status
    
    if [ -f $CU_CP_STATUS_TMP_FILE ]
    then
        mv $CU_CP_STATUS_TMP_FILE $CU_CP_STATUS_FILE
    else
        $RM $CU_CP_STATUS_FILE
    fi
	return 0

}
