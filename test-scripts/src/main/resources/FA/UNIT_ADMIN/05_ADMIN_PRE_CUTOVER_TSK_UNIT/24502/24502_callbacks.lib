#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# 08/07/2014	xkriski	Tests invalid ip parameter to admin_pre_cutover_tasks

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to cleanup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

  echo "OK" > /ericsson/config/.admin_post_upgrade_tasks_status_file
  if [ $? -ne 0 ]
    then
        echo "Failed to create predecessor status file"
        return 110
    fi

  # remove admin_pre_cutover_tasks status file if exists
  test -e /ericsson/config/.admin_pre_cutover_tasks_status_file
    if [ $? -eq 0 ]
    then
        echo "Removing status file before test"
        rm /ericsson/config/.admin_pre_cutover_tasks_status_file
        if [ $? -ne 0 ]
        then
           echo "Error removing status file"
	   return 111
        fi
    fi

  return 0
}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {

    test -e /opt/ericsson/sck/bin/admin_pre_cutover_tasks.bsh
    if [ $? -ne 0 ]
    then
        echo "Script not found"
        return 120
    fi
    test -e /ericsson/config/.admin_post_upgrade_tasks_status_file
    if [ $? -ne 0 ]
    then
        echo "Predecessor status file not found"
        return 121
    fi

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {
    # Test with invalid ip parameter 
    OUT=`admin_pre_cutover_tasks.bsh notanipaddress.  /JUMP/UPGRADE_SW/14.3.8`
    RC=$?
    echo "Output with invalid ip parameter is $OUT"
    # Check return code is not 0
    if [ $RC -eq 0 ]
    then
        echo "Success return code when ip parameter is not a valid ip address"
        return 100
    fi
   
    # Check get error about invalid ip format
    if [[ $OUT != *"is not a valid IP address"* ]]
    then
        echo "No is not a valid IP address msg"
        return 102
    fi

   # Check admin_pre_cutover_tasks status file not created 
   test -e /ericsson/config/.admin_pre_cutover_tasks_status_file
    if [ $? -eq 0 ]
    then
        echo "status file found, but should not have been created by invalid param scenario"
        return 103
    fi

    # Test with unreachable ip address
    OUT=`admin_pre_cutover_tasks.bsh 1.1.1.1 /JUMP/UPGRADE_SW/14.3.8`
    RC=$?
    echo "Output with unreachable ip address is $OUT"
    # Check return code is not 0
    if [ $RC -eq 0 ]
    then
        echo "Success return code when unreachable ip address"
        return 104
    fi

    # Check get error about unreachable ip
    if [[ $OUT != *"Failed to mount"* ]]
    then
        echo "No Failed to mount msg"
        return 105
    fi

    # Check admin_pre_cutover_tasks status file exists
    test -e /ericsson/config/.admin_pre_cutover_tasks_status_file
    if [ $? -ne 0 ]
    then
        echo "status file not found, but should have been created by unreachable mount scenario"
        return 106
    fi

    return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {


    # remove admin_pre_cutover_tasks status file if exists
    test -e /ericsson/config/.admin_pre_cutover_tasks_status_file
    if [ $? -eq 0 ]
    then
        echo "Removing status file created by this test"
        rm /ericsson/config/.admin_pre_cutover_tasks_status_file
        if [ $? -ne 0 ]
        then
           echo "Error removing status file created by this test"
        fi
    fi

	return 0

}
