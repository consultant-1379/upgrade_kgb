#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to cleanup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

    #Test with local system.ini missing
    LOCAL_TMP_MOUNT_POINT="/tmp/tmp_mount_point"
    REMOTE_PATH_TO_MOUNT="10.44.192.191:/JUMP"
    REMOTE_INI_FILE="${LOCAL_TMP_MOUNT_POINT}/tmp/config/orc_system_ini_updates"
    LOCAL_SYSTEM_INI="/ericsson/config/system.ini"
    LOCAL_SYSTEM_INI_TMP="/ericsson/config/system_tmp.ini"
    
    mkdir $LOCAL_TMP_MOUNT_POINT
    if [ $? -ne 0 ]
    then 
        echo "ERROR: failed to make mount point directory"
        return 1
    fi
    
    mount $REMOTE_PATH_TO_MOUNT $LOCAL_TMP_MOUNT_POINT
    if [ $? -ne 0 ]
    then 
        echo "ERROR: failed to mount ${REMOTE_PATH_TO_MOUNT} to ${LOCAL_TMP_MOUNT_POINT}"
        return 1
    fi
    
    if ! mkdir -p "${LOCAL_TMP_MOUNT_POINT}/tmp/config"
    then
        echo "ERROR: failed to mount create directory ${LOCAL_TMP_MOUNT_POINT}/tmp/config"
        return 1
    fi
    
#Setup remote ini file
echo "iniset NETWORK_SIZE number_rnc_count=5
iniset NETWORK_SIZE -f /ericsson/config/.network_size number_rnc_count=5
iniset SERVER_MISC OSS_MINUTE_GPEH=yes
iniset SERVER_MISC OSS_CELL_TRACE=yes
iniset NUMBER_IPROUTER_NODES number_iprouter_nodes=6
iniset NUMBER_EPGSSR_NODES number_epgssr_nodes=7
iniset NUMBER_MTAS_NODES number_mtas_nodes=8 
iniset NUMBER_CSCF_NODES number_cscf_nodes=9
iniset NUMBER_H2S_NODES number_h2s_nodes=10 
iniset SERVER_MISC OSS_5mROP_FS=YES
iniset NUMBER_EGR_NODES number_egr_nodes=11 
iniset NUMBER_HSS_NODES number_hss_nodes=12 
iniset NUMBER_PICO_WCDMA_CELLS number_pico_wcdma_cells=13
iniset NUMBER_PICO_LTE_CELLS number_pico_lte_cells=14
iniset NUMBER_TCU_NODES number_tcu_nodes=15
iniset NUMBER_DSC_NODES number_dsc_nodes=16
iniset NUMBER_BSP_NODES number_bsp_nodes=17
iniset NUMBER_SASNSSR_NODES number_sasnssr_nodes=18
iniset NUMBER_SDC_NODES number_sdc_nodes=20
iniset NUMBER_DUA_S_NODES number_dua_s_nodes=21
iniset NUMBER_RNC_1MIN number_rnc_1min=22
iniset NUMBER_MP_15MIN number_mp_15min=23
iniset GPEH_FSIZE_1MIN gpeh_fsize_1min=24
iniset FTH_INSTANCES_PMS fth_instances_pms=25
iniset NUMBER_MP_1MIN number_mp_1min=26
iniset NUMBER_WIFI_NODES number_wifi_nodes=27" > $REMOTE_INI_FILE
    
    cp $LOCAL_SYSTEM_INI $LOCAL_SYSTEM_INI_TMP
    if [ $? -ne 0 ]
    then 
        echo "ERROR: failed to mv ${$LOCAL_SYSTEM_INI} to ${LOCAL_SYSTEM_INI_TMP}"
        return 1
    fi
    
    rm $LOCAL_SYSTEM_INI  
    
    if [ $? -ne 0 ]
    then 
        echo "ERROR: failed to remove ${LOCAL_SYSTEM_INI}"
        return 1
    fi
    
    return 0
}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {
    
    return 0
}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {
    
    source /opt/ericsson/sck/lib/admin_common_functions.lib
    LOGFILE=/tmp/system_ini.log
    DEBUG=TRUE
    ADMIN_ORCH_DEPOT_MWS=/JUMP/tmp
    ADMIN_IP_ADDRESS_MWS=10.44.192.191
    LOCAL_SYSTEM_INI="/ericsson/config/system.ini"
    

    admin_update_system_ini_file 
    res=$?

    if [ $res -eq 1 ] 
    then
        orc_log_script "Negative test of admin_update_system_ini_file (${LOCAL_SYSTEM_INI} doesn't exist) was successful"
    else
        orc_log_script "ERROR: Negative test of admin_update_system_ini_file (${LOCAL_SYSTEM_INI} doesn't exist) failed"
        return 1
    fi
    
    return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {


	# Coded to fail in case TC_AUTOMATED=1 before automation complete.
	# Change return code as required
    
	return 0


}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {
 
    LOCAL_TMP_MOUNT_POINT="/tmp/tmp_mount_point"
    REMOTE_INI_FILE=${LOCAL_TMP_MOUNT_POINT}/tmp/config/orc_system_ini_updates 
    LOCAL_SYSTEM_INI="/ericsson/config/system.ini"
    LOCAL_SYSTEM_INI_TMP="/ericsson/config/system_tmp.ini"
    
    if ! rm $REMOTE_INI_FILE  
    then 
        echo "ERROR: Failed to remove remote ini file "
        return 1
    fi
    
    if ! rmdir "${LOCAL_TMP_MOUNT_POINT}/tmp/config" 
    then
        echo "ERROR: Failed to remove directory ${LOCAL_TMP_MOUNT_POINT}/config"
        return 1
    fi
    
    if ! rmdir "${LOCAL_TMP_MOUNT_POINT}/tmp" 
    then
        echo "ERROR: Failed to remove directory ${LOCAL_TMP_MOUNT_POINT}/config/tmp"
        return 1
    fi
    
        
    mv $LOCAL_SYSTEM_INI_TMP $LOCAL_SYSTEM_INI
    if [ $? -ne 0 ]
    then 
        echo "ERROR: failed to mv ${$LOCAL_SYSTEM_INI_TMP} to ${LOCAL_SYSTEM_INI}"
        return 1
    fi
    
	chgrp sybase $LOCAL_SYSTEM_INI
	if [ $? -ne 0 ]
    then 
        echo "ERROR: Failed to change group ownership of $LOCAL_SYSTEM_INI"
        return 1
    fi
	
    umount -f $LOCAL_TMP_MOUNT_POINT
    rmdir $LOCAL_TMP_MOUNT_POINT
    
    LOGFILE=/tmp/system_ini.log
    rm $LOGFILE
    return 0


}

