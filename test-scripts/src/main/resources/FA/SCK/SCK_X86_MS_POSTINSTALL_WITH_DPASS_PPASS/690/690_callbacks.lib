#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to cleanup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

	return 0

}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {

        ##Generating and Migrating Data##
        echo "Generating and Migrating Data"
        echo "-----------------------------"

        #Generate the LDAP name service data on the OSS Master Server
        echo "Generate the LDAP name service data on the OSS Master Server"
        echo "------------------------------------------------------------"

        /opt/ericsson/sck/bin/configure_ldap.bsh -g -y || return 1

        #Migrate the LDAP name service data from the OSS Master Server to the O&M Services Server
        echo "Migrate the LDAP name service data from the OSS Master Server to the O&M Services Server"
        echo "----------------------------------------------------------------------------------------"

/usr/local/bin/expect << EOF
	set timeout 600
        spawn /opt/ericsson/sck/bin/configure_ldap.bsh -m

        expect "Run the LDAP migration now on the Master Server?" { send "y\n" ; exp_continue } \
                "LDAP DS IP address" { send "\n" ; exp_continue } \
                "LDAP domain name " { send "\n" ; exp_continue } \
                "LDAP migration bind DN" { send "\n" ; exp_continue } \
                "Are the values ok? " { send "y\n" ; exp_continue } \
                "LDAP migration bind password:" { send "ldapadmin\n" }

        expect closed
EOF

        #Install the Master Server post-migration files (remove migrated users and groups from Master Server files)
        echo "Install the Master Server post-migration files"
        echo "----------------------------------------------"

        /opt/ericsson/sck/bin/configure_ldap.bsh -e || return 1

        #Finalize LDAP client setup
        echo "Finalize LDAP client setup"
        echo "--------------------------"

/usr/local/bin/expect << EOF
        spawn /opt/ericsson/sck/bin/maintain_ldap.bsh

        expect "Continue to update LDAP?" { send "y\n" ; exp_continue } \
                "LDAP domain name DN" { send "\n" ; exp_continue } \
                "LDAP DS IP address list <space separated>" { send "\n" ; exp_continue } \
                "LDAP maintenance bind DN" { send "\n" ; exp_continue } \
                "Are the values ok?" { send "y\n" ; exp_continue } \ 
                "LDAP maintenance bind password" { send "ldapadmin\n" }

        expect closed
EOF

        return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {

	return 0

}
