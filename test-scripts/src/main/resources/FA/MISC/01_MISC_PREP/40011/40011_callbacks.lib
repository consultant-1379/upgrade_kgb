#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to cleanup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

	return 0

}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {
    return 0
}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {
    ORCH_CMD_MODE="local"
    echo "MODE is ${ORCH_CMD_MODE} ...... "
    echo " "
    PATH=$PATH:/usr/sfw/bin
    pydoc modules | grep setuptools
    if [ $? -ne 0 ]
    then
        echo "Installing setuptools"
        gunzip setuptools-3.4.4.tar.gz
        tar xvf setuptools-3.4.4.tar
        cd setuptools-3.4.4
        python setup.py install || return 1
        cd ..
    fi

    #Install pycryrpto:
    pydoc modules | grep Crypto
    if [ $? -ne 0 ]
    then
        echo "Installing pycrypto"
        gunzip pycrypto-2.6.1.tar.gz
        tar xvf pycrypto-2.6.1.tar
        cd pycrypto-2.6.1
        python setup.py install || return 2
        cd ..
    else
        echo "Pycrypto already installed"
    fi

    #Install ecdsa
    pydoc modules | grep ecdsa
    if [ $? -ne 0 ]
    then
        echo "Installing ecdsa"
        gunzip ecdsa-0.11.tar.gz
        tar xvf ecdsa-0.11.tar
        cd ecdsa-0.11
        python setup.py install || return 3
        cd ..
    else
        echo "ecdsa already installed"
    fi

    #Install paramiko
    pydoc modules | grep paramiko
    if [ $? -ne 0 ]
    then
        echo "Installing paramiko"
        gunzip paramiko-1.12.0.tar.gz
        tar xvf paramiko-1.12.0.tar
        cd paramiko-1.12.0
        python setup.py install || return 4
        cd ..
    else
        echo "paramiko already installed"
    fi

    #Install fabric
    pydoc modules | grep fabric
    if [ $? -ne 0 ]
    then
        echo "Installing fabric"
        gunzip Fabric-1.6.0.tar.gz
        tar xvf Fabric-1.6.0.tar
        cd Fabric-1.6.0
        python setup.py install || return 5
        cd ..
    else
        echo "fabric already installed"
    fi

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {

    return 0
}
