#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to cleanup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

	# Coded to fail in case TC_AUTOMATED=1 before automation completed
	# Change return code as required
    
    # Run this TC with mws_ossmaster_root.env environment file from the gateway as the target server will reboot resulting in lost connectivity    
    # TC is being run from gateway. SSH into ossmaster to generate the required NOK status file for the previous module
    
    echo "Creating admin pre upgrade tasks status file with a OK"
    echo OK > /ericsson/config/.admin_pre_upgrade_tasks_status_file
    
    echo "Creating admin split cluster status file with a OK"
    echo OK > /ericsson/config/.admin_split_cluster_status_file    
    
    echo "Creating a /tmp/pre_adtmp6.log file for parsing the results"	
    touch /tmp/pre_adtmp6.log || 1    
    
    #echo "Offlining the sybase for the TC"
    #/opt/VRTS/bin/hagrp -offline Sybase1 -sys ossmaster
    #sleep 120
    

	return 0

}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {

	# Coded to fail in case TC_AUTOMATED=1 before automation completed
	# Change return code as required

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {
	#ssh -o StrictHostKeyChecking=no ossrcdm@gateway "fab -H $ORCH_SERVER -f /tmp/stub.py -u $ORCH_USER admin_reboot_tasks"    
    #/var/tmp/Liveupgrade/slu_reboot_tasks.bsh
    #fab -H $ORCH_SERVER -f /tmp/stub.py -u $ORCH_USER admin_reboot_tasks:options=
    #ssh -o StrictHostKeyChecking=no ossrcdm@gateway "fab -H $ORCH_SERVER -f /tmp/stub.py -u $ORCH_USER admin_split_cluster:options=-d"
    #ssh -o StrictHostKeyChecking=no ossrcdm@gateway "fab -H $ORCH_SERVER -f /tmp/stub.py -u $ORCH_USER admin_split_cluster:options=-d" | tee /tmp/pre_adtmp6.log    
        
	#if [ $? -ne 0 ]; then
	#	echo "perform admin split cluster failed....."
	#	return 1
	#fi
    
    local L_TMP1
    local L_TMP2
    local L_TMP3
    local L_STRING="Status reported from previous run"

    ssh -o StrictHostKeyChecking=no ossrcdm@gateway "fab -H $ORCH_SERVER -f /tmp/stub.py -u $ORCH_USER admin_split_cluster:options=-d" | tee /tmp/pre_adtmp6.log
    L_TMP1=( ${PIPESTATUS[0]} )      #Gets module result not that of last command
    egrep -i "${L_STRING}" /tmp/pre_adtmp6.log | egrep -i 'OK'   
    L_TMP2=( ${?} )
    egrep -i 'ambiguous redirect|Syntax error|unexpected token|parse error|Permission denied|Undefined variable|Stale NFS' /tmp/pre_adtmp6.log
    L_TMP3=( ${?} )
    if [ ${L_TMP2} -eq 0 ]; then
        echo "MODULE GREP COMMAND OUTPUT FOR PREVIOUS RUN : $L_TMP2"
        echo "String '${L_STRING}' found in the output...OK!"
        echo "Now checking for common bash errors in the output..."
        if [ ${L_TMP3} -eq 1 ]; then
            echo "No common bash errors found"
            return 0
        else
            echo "Bash Errors were found, please check the output"
            return 1
        fi
    else
            return 1
    fi


}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	# Coded to fail in case TC_AUTOMATED=1 before automation complete.
	# Change return code as required

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {

	# Coded to fail in case TC_AUTOMATED=1 before automation complete
	# Change return code as required
    
    #echo "Onlining the sybase after the TC"
    #/opt/VRTS/bin/hagrp -online Sybase1 -sys ossmaster
    #sleep 120    

	return 0

}
